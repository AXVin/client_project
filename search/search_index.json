{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Plans This is the Plan Document for the Tournament and Product Integration Database Design Best Suited Database Type: SQL Table Name: product_integration (Optional) Key Type Description purchase_id PRIMARY KEY Purchase ID product_id INTEGER Foreign Key to the purchased product (Optional) coupon VARCHAR A Randomly Generated key used to redeem the roles used BOOLEAN A bool to indicate if the coupon has already been used or not. Optional, could be stored on bot's database, included here for security purposes Format for coupon Coupon can be a hex token(4-8 bytes to keep it User-Friendly) API Design A RESTful API for verification of the user inputted coupon to prevent any security issues from direct access to the database Requires a valid client_id (randomly generated, token hex[16-32 bytes]) for authorization Endpoints: If using a subdomain for only this API, the prefix /coupon could be omitted POST /coupon/verify For verification of the user-inputted coupon Headers: Authorization: client_id Body: { coupon : COUPON } Returns: 200 : Coupon exists in database and is valid/has not been used yet Raises: 403 : Invalid client_id: Authorization Failed 404 : Invalid/Used coupon: The coupon does not exist or has already been used(If used is True) Backend Action: Check client_id and authorize ( 403 if invalid) Query database ( 404 if no record found) Check used field in row ( 404 if used is True) Return 200 POST /coupon/used For turning the used field in database to True after successfully assigning roles Headers: Authorization: client_id Body: { coupon : COUPON } Returns: 200 : Successful Raises: 403 : Invalid client_id: Authorization Failed 404 : Invalid/Used coupon: The coupon does not exist or has already been used(If used is True) Backend Action: Check client_id and authorize ( 403 if invalid) Query database ( 404 if no record found) Check used field in row ( 404 if used is True) Sets used field in the database to True Return 200 Discord Server Design The discord server plan where the tournament will be held Roles Staff Structure Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users General Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament Channels welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role) Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles Bot Interface Prefix = ! Commands help : Shows the bot's commands redeem coupon : Grants access to the Community role !redeem coupon command Arguments: coupon: The coupon recieved on the purchase of the product Returns: Assigns role to the user on success Backend Actions: Takes user input Hits the /coupon/verify endpoint with client_id and coupon If successful: Assign Community/Verified Role to the user Hits the /coupon/used endpoint with client_id and coupon","title":"Home"},{"location":"#plans","text":"This is the Plan Document for the Tournament and Product Integration","title":"Plans"},{"location":"#database-design","text":"Best Suited Database Type: SQL Table Name: product_integration (Optional) Key Type Description purchase_id PRIMARY KEY Purchase ID product_id INTEGER Foreign Key to the purchased product (Optional) coupon VARCHAR A Randomly Generated key used to redeem the roles used BOOLEAN A bool to indicate if the coupon has already been used or not. Optional, could be stored on bot's database, included here for security purposes","title":"Database Design"},{"location":"#format-for-coupon","text":"Coupon can be a hex token(4-8 bytes to keep it User-Friendly)","title":"Format for coupon"},{"location":"#api-design","text":"A RESTful API for verification of the user inputted coupon to prevent any security issues from direct access to the database Requires a valid client_id (randomly generated, token hex[16-32 bytes]) for authorization","title":"API Design"},{"location":"#endpoints","text":"If using a subdomain for only this API, the prefix /coupon could be omitted","title":"Endpoints:"},{"location":"#post-couponverify","text":"For verification of the user-inputted coupon","title":"POST /coupon/verify"},{"location":"#headers","text":"Authorization: client_id","title":"Headers:"},{"location":"#body","text":"{ coupon : COUPON }","title":"Body:"},{"location":"#returns","text":"200 : Coupon exists in database and is valid/has not been used yet","title":"Returns:"},{"location":"#raises","text":"403 : Invalid client_id: Authorization Failed 404 : Invalid/Used coupon: The coupon does not exist or has already been used(If used is True)","title":"Raises:"},{"location":"#backend-action","text":"Check client_id and authorize ( 403 if invalid) Query database ( 404 if no record found) Check used field in row ( 404 if used is True) Return 200","title":"Backend Action:"},{"location":"#post-couponused","text":"For turning the used field in database to True after successfully assigning roles","title":"POST /coupon/used"},{"location":"#headers_1","text":"Authorization: client_id","title":"Headers:"},{"location":"#body_1","text":"{ coupon : COUPON }","title":"Body:"},{"location":"#returns_1","text":"200 : Successful","title":"Returns:"},{"location":"#raises_1","text":"403 : Invalid client_id: Authorization Failed 404 : Invalid/Used coupon: The coupon does not exist or has already been used(If used is True)","title":"Raises:"},{"location":"#backend-action_1","text":"Check client_id and authorize ( 403 if invalid) Query database ( 404 if no record found) Check used field in row ( 404 if used is True) Sets used field in the database to True Return 200","title":"Backend Action:"},{"location":"#discord-server-design","text":"The discord server plan where the tournament will be held","title":"Discord Server Design"},{"location":"#roles","text":"","title":"Roles"},{"location":"#staff-structure","text":"Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users","title":"Staff Structure"},{"location":"#general","text":"Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament","title":"General"},{"location":"#channels","text":"welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role) Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles","title":"Channels"},{"location":"#bot-interface","text":"Prefix = !","title":"Bot Interface"},{"location":"#commands","text":"help : Shows the bot's commands redeem coupon : Grants access to the Community role","title":"Commands"},{"location":"#redeem-coupon-command","text":"","title":"!redeem &lt;coupon&gt; command"},{"location":"#arguments","text":"coupon: The coupon recieved on the purchase of the product","title":"Arguments:"},{"location":"#returns_2","text":"Assigns role to the user on success","title":"Returns:"},{"location":"#backend-actions","text":"Takes user input Hits the /coupon/verify endpoint with client_id and coupon If successful: Assign Community/Verified Role to the user Hits the /coupon/used endpoint with client_id and coupon","title":"Backend Actions:"},{"location":"final/","text":"Discord Server Design The discord server plan where the tournament will be held Roles Staff Structure Note These are optional Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users General Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament Channels welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role) Bot Channels error-logs - If any unhandled errors occur, they are shown here Access Level - Bot, Admins commands-debug - All commands invoked in the server are shown here! Access Level - Bot, Admins Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles Bot Interface Prefix = ! Main Commands redeem coupon : Grants access to the Community role Example !redeem GHDIJH34HA8F !redeem coupon command Arguments: coupon: The coupon recieved on the purchase of the product Returns: Assigns role to the user on success Backend Actions: Takes user input Run SELECT * FROM coupons WHERE coupon=$input; If returned: Assign Community/Verified Role to the user Delete the coupon from the database to preserve space","title":"Final Plan"},{"location":"final/#discord-server-design","text":"The discord server plan where the tournament will be held","title":"Discord Server Design"},{"location":"final/#roles","text":"","title":"Roles"},{"location":"final/#staff-structure","text":"Note These are optional Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users","title":"Staff Structure"},{"location":"final/#general","text":"Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament","title":"General"},{"location":"final/#channels","text":"welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role)","title":"Channels"},{"location":"final/#bot-channels","text":"error-logs - If any unhandled errors occur, they are shown here Access Level - Bot, Admins commands-debug - All commands invoked in the server are shown here! Access Level - Bot, Admins Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles","title":"Bot Channels"},{"location":"final/#bot-interface","text":"Prefix = !","title":"Bot Interface"},{"location":"final/#main-commands","text":"redeem coupon : Grants access to the Community role Example !redeem GHDIJH34HA8F","title":"Main Commands"},{"location":"final/#redeem-coupon-command","text":"","title":"!redeem &lt;coupon&gt; command"},{"location":"final/#arguments","text":"coupon: The coupon recieved on the purchase of the product","title":"Arguments:"},{"location":"final/#returns","text":"Assigns role to the user on success","title":"Returns:"},{"location":"final/#backend-actions","text":"Takes user input Run SELECT * FROM coupons WHERE coupon=$input; If returned: Assign Community/Verified Role to the user Delete the coupon from the database to preserve space","title":"Backend Actions:"},{"location":"how_to/","text":"INSTALLATION Note Do these steps in the order specified Pre-requisites Python v3.7+ PostgreSQL v10+ Installing dependencies pip install --editable . Configuring your database After installing PostgreSQL, Open your psql tool and type in CREATE ROLE coupons WITH LOGIN PASSWORD password ; CREATE DATBASE coupons OWNER coupons ; This will create the role coupons with the password password and a database named coupons Creating your Bot Go on the Discord's Developer site Create an Application. You can name it anything you want Click on Bots tab on the left drawer Now on the ADD-A-BOT page, click on the Add Bot button and confirm on the next dialogue Copy the Bot Token from the next page Make sure you don't copy the client secret instead of the Bot Token Writing the configuration file This is the heart and soul of the bot! Edit the file named config.py situated in the main directory as follows token = # The Bot Token postgres = postgres://coupons:password@localhost/coupons verified_role = 597308576456769556 # The ID of the role which is assigned on claiming a coupon successfully welcome_channel = 597308294687752230 # The ID of the channel where the welcome message is to be sent welcome_message = Welcome {user.mention}! Thanks for joining the {server}! We are now at {member_count:,d} members. Please make sure to redeem your coupon which is on the back of the product s label with the `!redeem coupon ` command! For example: `!redeem GHD387HDFK89` # The welcome message sent whenever a user joins! # Variable: # {user} = The user who joined # You can use .mention on it to ping the user # {server} = The server which the user joined # {member_count} = The current member count! error_logs = 597377084960014355 # The ID of the channel where the errors are sent(if any) commands_debug = 597377182720983070 # The ID of the channel where all the commands are logged! Running the Bot Warning Must run the bot once before creating any coupons/batches. This ensures that the database is completly set up Start the bot with coupons run command Creating Coupons You can create coupons with the coupons create command. Note Each command creates a new batch --file-format defaults to csv --output-path defaults to ./coupons/ directory $ coupons create --help Usage: coupons create [options] Creates Coupons Options: -a, --amount INTEGER number of coupons to create [required] -f, --file-format [csv|txt] format in which the coupon is outputted -o, --output-path PATH --help Show this message and exit. For example:- Simple: coupons create --amount 100 (Can omit the --amount part to start a prompt) Txt output: coupons create -a 100 -f txt File on desktop: coupons create -a 100 -o C:\\Users\\my_user\\Desktop\\ File Path works on all operating systems All flags are optional and the order in which you put them doesn't matter Deleting the entire database of coupons and batches Danger This action is irreversible and will delete EVERYTHING from the database Run coupons clear_database in your terminal to clear the database","title":"How To Use"},{"location":"how_to/#installation","text":"Note Do these steps in the order specified","title":"INSTALLATION"},{"location":"how_to/#pre-requisites","text":"Python v3.7+ PostgreSQL v10+","title":"Pre-requisites"},{"location":"how_to/#installing-dependencies","text":"pip install --editable .","title":"Installing dependencies"},{"location":"how_to/#configuring-your-database","text":"After installing PostgreSQL, Open your psql tool and type in CREATE ROLE coupons WITH LOGIN PASSWORD password ; CREATE DATBASE coupons OWNER coupons ; This will create the role coupons with the password password and a database named coupons","title":"Configuring your database"},{"location":"how_to/#creating-your-bot","text":"Go on the Discord's Developer site Create an Application. You can name it anything you want Click on Bots tab on the left drawer Now on the ADD-A-BOT page, click on the Add Bot button and confirm on the next dialogue Copy the Bot Token from the next page Make sure you don't copy the client secret instead of the Bot Token","title":"Creating your Bot"},{"location":"how_to/#writing-the-configuration-file","text":"This is the heart and soul of the bot! Edit the file named config.py situated in the main directory as follows token = # The Bot Token postgres = postgres://coupons:password@localhost/coupons verified_role = 597308576456769556 # The ID of the role which is assigned on claiming a coupon successfully welcome_channel = 597308294687752230 # The ID of the channel where the welcome message is to be sent welcome_message = Welcome {user.mention}! Thanks for joining the {server}! We are now at {member_count:,d} members. Please make sure to redeem your coupon which is on the back of the product s label with the `!redeem coupon ` command! For example: `!redeem GHD387HDFK89` # The welcome message sent whenever a user joins! # Variable: # {user} = The user who joined # You can use .mention on it to ping the user # {server} = The server which the user joined # {member_count} = The current member count! error_logs = 597377084960014355 # The ID of the channel where the errors are sent(if any) commands_debug = 597377182720983070 # The ID of the channel where all the commands are logged!","title":"Writing the configuration file"},{"location":"how_to/#running-the-bot","text":"Warning Must run the bot once before creating any coupons/batches. This ensures that the database is completly set up Start the bot with coupons run command","title":"Running the Bot"},{"location":"how_to/#creating-coupons","text":"You can create coupons with the coupons create command. Note Each command creates a new batch --file-format defaults to csv --output-path defaults to ./coupons/ directory $ coupons create --help Usage: coupons create [options] Creates Coupons Options: -a, --amount INTEGER number of coupons to create [required] -f, --file-format [csv|txt] format in which the coupon is outputted -o, --output-path PATH --help Show this message and exit. For example:- Simple: coupons create --amount 100 (Can omit the --amount part to start a prompt) Txt output: coupons create -a 100 -f txt File on desktop: coupons create -a 100 -o C:\\Users\\my_user\\Desktop\\ File Path works on all operating systems All flags are optional and the order in which you put them doesn't matter","title":"Creating Coupons"},{"location":"how_to/#deleting-the-entire-database-of-coupons-and-batches","text":"Danger This action is irreversible and will delete EVERYTHING from the database Run coupons clear_database in your terminal to clear the database","title":"Deleting the entire database of coupons and batches"},{"location":"new_plan/","text":"Plans This is the Plan Document for the Tournament and Product Integration Database Design Database Used: PostgreSQL Table Name: coupons Key Type Description coupon VARCHAR(16) PRIMARY KEY An 8 bit token_hex used to redeem the roles Creation of Token import secrets secrets . token_hex ( 8 ) Discord Server Design The discord server plan where the tournament will be held Roles Staff Structure Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users General Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament Channels welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role) Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles Bot Interface Prefix = ! Commands redeem coupon : Grants access to the Community role !redeem coupon command Arguments: coupon: The coupon recieved on the purchase of the product Returns: Assigns role to the user on success Backend Actions: Takes user input Run SELECT * FROM coupons WHERE coupon=$input; If returned: Assign Community/Verified Role to the user Delete the coupon from the database to preserve space","title":"New Plan"},{"location":"new_plan/#plans","text":"This is the Plan Document for the Tournament and Product Integration","title":"Plans"},{"location":"new_plan/#database-design","text":"Database Used: PostgreSQL Table Name: coupons Key Type Description coupon VARCHAR(16) PRIMARY KEY An 8 bit token_hex used to redeem the roles","title":"Database Design"},{"location":"new_plan/#creation-of-token","text":"import secrets secrets . token_hex ( 8 )","title":"Creation of Token"},{"location":"new_plan/#discord-server-design","text":"The discord server plan where the tournament will be held","title":"Discord Server Design"},{"location":"new_plan/#roles","text":"","title":"Roles"},{"location":"new_plan/#staff-structure","text":"Tournament Admins - Have full access/control of server and can create bot preferences Tournament Moderators - Limited Access to the server and will maintain a link between Admins and users","title":"Staff Structure"},{"location":"new_plan/#general","text":"Community / Verified - Role assigned when a coupon is successfully redeemed Tournament Participant - Role assigned once the user verifies that they want to join the tournament","title":"General"},{"location":"new_plan/#channels","text":"welcome - Greets the new user and asks them to run the !redeem coupon command Access Level - Public (everyone) room-pass-and-id - Channel where the users will be informed about the Access Level - Tournament Participant(Role) Above are the required/mandatory channel(s). Rest are Optional and can be created using Channel Overrides for the Roles","title":"Channels"},{"location":"new_plan/#bot-interface","text":"Prefix = !","title":"Bot Interface"},{"location":"new_plan/#commands","text":"redeem coupon : Grants access to the Community role","title":"Commands"},{"location":"new_plan/#redeem-coupon-command","text":"","title":"!redeem &lt;coupon&gt; command"},{"location":"new_plan/#arguments","text":"coupon: The coupon recieved on the purchase of the product","title":"Arguments:"},{"location":"new_plan/#returns","text":"Assigns role to the user on success","title":"Returns:"},{"location":"new_plan/#backend-actions","text":"Takes user input Run SELECT * FROM coupons WHERE coupon=$input; If returned: Assign Community/Verified Role to the user Delete the coupon from the database to preserve space","title":"Backend Actions:"}]}